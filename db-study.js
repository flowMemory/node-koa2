/*

    
    1. 数据库分类：
        关系型数据库：
            1. SQLserver  2. Oracle  3. mysql ...
        非关系型数据库
            1. MongoDb    2. Redis


    2. 关系型数据库常识：
        1. 主键的设置：用户的唯一性标识：不能重复，不能为空
            1. 随机性主键：查找速度慢
            2. 自增型主键：可破解难度低

        2. 数据库设计理念：ACID（原子性，一致性，隔离性，持久性）
            详解...

        3. 数据库的事务概念：一致性原则
            当发生串联操作，即几个数据库任务有关联关系依次执行时，这些任务要求按照事务的原则处理。也就是执行的结果表现具有一致性，
            要么都成功，要么都失败，只有这样才能正常保证数据的一致性。

    
    3. 编程化创建数据表结构： ORM （虚拟对象数据库） 以操作对象的方式创建操作数据库
        1. Sequelize ：ORM框架
        2. 基本用法：
            1. 引入Sequelize 传入数据库配置( ip地址, 用户名, 密码... )
            2. 创建数据表，初始化数据字段

            对象型数据库的用法理念：
                对于数据的操作：写入，查询等都是在业务代码中以对象的方式操作的

            3. 用法二，写入数据需要提前在model模块配置表字段
                
            4. 这里的model user模块承担的业务划分是否合理，这里集中了初始化表字段，查询，常见数据等业务，是否需要重新划分业务模块

    4. 数据库实践知识：
        一. 数据库软删除，和硬删除：
            1. 软删除：并不会真实的删除库中的数据，只会为数据添加一条删除的标识位
            2. 硬删除：真实的在库中删除该记录
            * 适用场景：硬删除适用于一些业务的状态记录，或者是重要性不足的数据。硬删除的好处是减少了库表的数据总量，提高了库表操作速度
                       软删除适用于重要的数据，为数据留下可恢复状态的条件，但是会导致库表数据总量持续增大



*/ 